"use strict";exports.__esModule=true;var isJS=function(file){return/\.js(\?[^.]+)?$/.test(file)};var isMap=function(file){return/\.js\.map$/.test(file)};var default_1=function(){function default_1(options){if(options===void 0){options={}}this.options=Object.assign({filename:"vue-ssr-server-bundle.json"},options)}default_1.prototype.apply=function(compiler){var _this=this;if(compiler.options.target!=="node"){console.error('webpack config `target` should be "node".')}if(compiler.options.output&&compiler.options.output.library&&compiler.options.output.library.type!=="commonjs2"){console.error('webpack config `output.libraryTarget` should be "commonjs2".')}if(!compiler.options.externals){console.log("It is recommended to externalize dependencies in the server build for "+"better build performance.")}compiler.hooks.compilation.tap("vue-server-plugin",(function(compilation){compilation.hooks.afterProcessAssets.tap("HelloCompilationPlugin",(function(ass){var stats=compilation.getStats().toJson();if(!stats.entrypoints||!stats.assets){return}var entryName=Object.keys(stats.entrypoints)[0];var entryInfo=stats.entrypoints[entryName];if(!entryInfo||!entryInfo.assets){return}var entryAssets=entryInfo.assets.filter((function(file){return isJS(file.name)&&!file.name.endsWith("hot-update.js")}));if(entryAssets.length>1){throw new Error("Server-side bundle should have one single entry file. "+"Avoid using CommonsChunkPlugin in the server config.")}var entry=entryAssets[0];if(!entry||typeof entry.name!=="string"){throw new Error('Entry "'+entryName+'" not found. Did you specify the correct entry option?')}var bundle={entry:entry.name,files:{},maps:{}};compilation.getAssets().map((function(asset){var source=asset.source.source();if(isJS(asset.name)){bundle.files[asset.name]=source}else if(isMap(asset.name)){bundle.maps[asset.name.replace(/\.map$/,"")]=JSON.parse(Buffer.from(source).toString())}compilation.deleteAsset(asset.name)}));var json=JSON.stringify(bundle,null,4);var filename=_this.options.filename;compilation.assets[filename]={source:function(){return json},size:function(){return json.length},map:function(){return{}},sourceAndMap:function(){return{source:json,map:{}}},updateHash:function(){},buffer:function(){return Buffer.from(json)}}}))}))};return default_1}();exports["default"]=default_1;